#!/bin/sh
#
# A cron job that takes the mail and adds it
# to the mhonarc archives for the working groups
#
# set this to the root of where the archives should be stored
ARCHIVE_ROOT_DIR=/usr/IETF/mail-archive/web  # where the archives should be stored
TEXT_ARCHIVES=/usr/IETF/mail-archive/text    # If we need to update the WEB with the Text archives
MESSAGE_LOCK=/usr/IETF/mail-archive/temp.message  #The lock file
ERROR_FLAG=0

################################################################################
#Subroutine:     global_lock
#Input:          None
#Output:         None
#Purpose:        The scripts for archiving mail all use basically the same 
#                files to do their job.  Having one script write to a mail 
#                file, while another script is then archiving it or moving it 
#                for date purposes would be bad.  So we make a global lock 
#                that will be used by all the scripts archiving mail.  In the
#                case of this script, the lock file will actually become the
#                temp storage area for the message to me archived
################################################################################
global_lock()
{
   while [ -f "$MESSAGE_LOCK" ] ; do
	echo "sleep for lock"
	/bin/sleep 5;
   done
   /bin/touch "$MESSAGE_LOCK"
#   (/bin/cat -; echo ''; echo '') >> "$MESSAGE_LOCK"
}

global_lock
cd $ARCHIVE_ROOT_DIR
# loop thru ARCHIVE_ROOT_DIR directories
for WG in `ls`; do
#    echo " "
#    echo `pwd`
#    echo $WG
    WG_ARCHIVE_DIR=$ARCHIVE_ROOT_DIR/$WG
    WG_ARCHIVE_RCFILE="$WG_ARCHIVE_DIR/mhonarc.rcfile"

#    echo $WG
#    echo $WG_ARCHIVE_RCFILE

    if [ ! -f $WG_ARCHIVE_RCFILE ] || [ ! -f $WG_ARCHIVE_DIR/current.mail ] ; then
        echo "archiver: no rcfile of current.mail for working group $WG"
    else 
        MAIL_ARCHIVE_FILE="$WG_ARCHIVE_DIR/current.mail"
        #
        # lock the archive file by trying to link to it
        # if we can't link to it, exit with EX_TEMPFAIL and sendmail
        # will retry a few minutes later
        # (better would be to sleep a few seconds and try again, but it's
        # rare that two messages for a single list arrive at the same time)
        #
#	echo $MAIL_ARCHIVE_FILE

#	WG_ARCHIVE_TMP="$WG_ARCHIVE_DIR/current.tmp"
#	cat $MAIL_ARCHIVE_FILE >> $WG_ARCHIVE_TMP
#	cat /dev/null > $MAIL_ARCHIVE_FILE
        # we are done copying the file so unlock
        #

#        echo "----------------------------------------------------"
#        echo $WG_ARCHIVE_RCFILE
#        echo $WG_ARCHIVE_DIR
#        echo $WG_ARCHIVE_TMP
        echo /usr/bin/mhonarc -add -outdir $WG_ARCHIVE_DIR/current -rcfile $WG_ARCHIVE_RCFILE $MAIL_ARCHIVE_FILE #$WG-web

        /usr/bin/mhonarc -add -outdir $WG_ARCHIVE_DIR/current -rcfile $WG_ARCHIVE_RCFILE $MAIL_ARCHIVE_FILE #$WG-web >> /dev/null

#The next line pulls messages from the text archives just to make sure we are all in sync, can usually be disabled
#        /usr/bin/mhonarc -add -outdir $WG_ARCHIVE_DIR/current -rcfile $WG_ARCHIVE_RCFILE $TEXT_ARCHIVES/$WG/current 

        # test for .mhonarc.lck directory and send mail if it is found
        #		echo $WG_ARCHIVE_DIR | mailx -s "Mhonarc on optimus problem" sweilnau@cnri.reston.va.us

	if [ -d $WG_ARCHIVE_DIR/current/.mhonarc.lck ]; then
		ERROR_FLAG=1
		echo problem with $WG_ARCHIVE_DIR/current/.mhonarc.lck
	else
		cat /dev/null > $MAIL_ARCHIVE_FILE
        fi
    fi

done
if [ $ERROR_FLAG -eq 1 ] ; then
    echo " AAAAAAAAAAAAAARRRRRRRRRRRRRRRRGGGGGGGGGGGGGHHHHHHHHHHHH "
#    echo $WG_ARCHIVE_DIR | mailx -s "Mhonarc on ran problem" bthorson@foretec.com
else
    rm $MESSAGE_LOCK
fi
exit 0
