#!/bin/bash


## Rather than use the Mailman archive system directly, this script
## is used by Mailman to create a text-based and web-based archive
## for mailing lists.  It is invoked as follows:
##
##   $0 LIST_NAME ARCHIVE_STYLE
##
## LIST_NAME is most often the working group acronym.  If LIST_NAME
## is new the directories needed for its archives are created
## automatically.
##
## ARCHIVE_STYLE is either: -public or -private.  If it has any
## other value then -public is assumed.
##
## In the case of -pubic there is a text archive and a web archive.
## This script creates the archives by concatenating messages onto a
## known file.  Separately, another script moves the known file to a
## more permanent location for the text archive and creates the web
## archive from that file.
##
## In the case of -private there is only a text archive.  This
## script creates the archive by concatenating messages onto a known
## file.  Separately, another script moves the known file to a more
## permanent location for the text archive.
##
## The arguments "-textsecure", "-text", "-websecure", and "-web"
## are provided for backwards compatibility.  They create one-half
## of the archives as suggested by their name because it used to be
## that we used two aliases to create the archives for each mailing
## list.


## NOTE WELL: A secure web archive is known not to exist.  There is
## code here for it if it should come into existence within the same
## model as the existing archives.  However, this code is commented
## out.  Thus, if this script is invoked with the old "-websecure"
## parameter it will exit silently without doing anything.  Under
## the new system a secure text archive is created but a secure web
## archive is silently ignored.


EX_NOUSER=67
EX_TEMPFAIL=75

UNSECURE_ARCHIVE=/a/www/ietf-mail-archive/text
SECURE_ARCHIVE=/a/www/ietf-mail-archive/text-secure
UNSECURE_WEB_ARCHIVE=/a/www/ietf-mail-archive/web
SECURE_WEB_ARCHIVE=/a/www/ietf-mail-archive/web-secure

WEB_TEMPLATE_DIR=/a/www/ietf-mail-archive/web/000TEMPLATE

WEB_ARCHIVE_FILE_NAME=current.mail
TEXT_ARCHIVE_FILE_NAME=current

WG="$1"					#The workgroup that owns the message
MESSAGE_LOCK=/tmp/${WG}-temp.message
ARCHIVE_STYLE="$2"			#What kind of archive

COPY=0

case $ARCHIVE_STYLE in
   -private)
	TEXT_TARGET_DIR=$SECURE_ARCHIVE
	TEXT_TARGET_FILE=$TEXT_ARCHIVE_FILE_NAME
	## WEB_TARGET_DIR=$SECURE_WEB_ARCHIVE
	## WEB_TARGET_FILE=$WEB_ARCHIVE_FILE_NAME
	## COPY=1
	;;
   -public)
	TEXT_TARGET_DIR=$UNSECURE_ARCHIVE
	TEXT_TARGET_FILE=$TEXT_ARCHIVE_FILE_NAME
	WEB_TARGET_DIR=$UNSECURE_WEB_ARCHIVE
	WEB_TARGET_FILE=$WEB_ARCHIVE_FILE_NAME
	COPY=1
	;;
   -textsecure)
	TARGET_DIR=$SECURE_ARCHIVE
	TARGET_FILE=$TEXT_ARCHIVE_FILE_NAME
	;;
   -text)
	TARGET_DIR=$UNSECURE_ARCHIVE
	TARGET_FILE=$TEXT_ARCHIVE_FILE_NAME
	;;
   -websecure)
	## TARGET_DIR=$SECURE_WEB_ARCHIVE
	## TARGET_FILE=$WEB_ARCHIVE_FILE_NAME
	## COPY=1
	;;
   -web)
	TARGET_DIR=$UNSECURE_WEB_ARCHIVE
	TARGET_FILE=$WEB_ARCHIVE_FILE_NAME
	COPY=1
	;;
   *)
	TEXT_TARGET_DIR=$UNSECURE_ARCHIVE
	TEXT_TARGET_FILE=$TEXT_ARCHIVE_FILE_NAME
	WEB_TARGET_DIR=$UNSECURE_WEB_ARCHIVE
	WEB_TARGET_FILE=$WEB_ARCHIVE_FILE_NAME
	COPY=1
	;;
esac


## from this point forward, bear in mind that we are invoked either
## the new way or the old way.  until we eliminate the need for
## backwards compatibility we have to know which way we were invoked


## this block is for backwards compatibility

if [ ! -z "$TARGET_DIR" ] ; then
    WG_ARCHIVE_DIR="$TARGET_DIR/$WG"
    if [ ! -d $WG_ARCHIVE_DIR ] ; then
        /bin/mkdir $WG_ARCHIVE_DIR
   	chmod 777 $WG_ARCHIVE_DIR

	if [ $COPY -ne 0 ] ; then
	    umask 0
	    cp -r $WEB_TEMPLATE_DIR/* $WG_ARCHIVE_DIR
	fi
    fi

    ARCHIVE_FILE="$WG_ARCHIVE_DIR/$TARGET_FILE"
    if [ ! -f "$ARCHIVE_FILE" ] ; then
        /bin/touch "$ARCHIVE_FILE"
   	chmod 666 "$ARCHIVE_FILE"
    fi
fi


## setup the text archive if invoked the new way

if [ ! -z "$TEXT_TARGET_DIR" ] ; then
    TEXT_WG_ARCHIVE_DIR="$TEXT_TARGET_DIR/$WG"
    if [ ! -d $TEXT_WG_ARCHIVE_DIR ] ; then
        /bin/mkdir $TEXT_WG_ARCHIVE_DIR
   	chmod 777 $TEXT_WG_ARCHIVE_DIR
    fi

    TEXT_ARCHIVE_FILE="$TEXT_WG_ARCHIVE_DIR/$TEXT_TARGET_FILE"
    if [ ! -f "$TEXT_ARCHIVE_FILE" ] ; then
        /bin/touch "$TEXT_ARCHIVE_FILE"
   	chmod 666 "$TEXT_ARCHIVE_FILE"
    fi
fi


## setup the web archive if invoked the new way

if [ ! -z "$WEB_TARGET_DIR" ] ; then
    WEB_WG_ARCHIVE_DIR="$WEB_TARGET_DIR/$WG"
    if [ ! -d $WEB_WG_ARCHIVE_DIR ] ; then
        /bin/mkdir $WEB_WG_ARCHIVE_DIR
   	chmod 777 $WEB_WG_ARCHIVE_DIR
    fi

    if [ $COPY -ne 0 ] ; then
	umask 0
	cp -r $WEB_TEMPLATE_DIR/* $WG_ARCHIVE_DIR
    fi

    WEB_ARCHIVE_FILE="$WEB_WG_ARCHIVE_DIR/$WEB_TARGET_FILE"
    if [ ! -f "$WEB_ARCHIVE_FILE" ] ; then
        /bin/touch "$WEB_ARCHIVE_FILE"
   	chmod 666 "$WEB_ARCHIVE_FILE"
    fi
fi


#echo "Accepting incoming archive to $ARCHIVE_FILE"      >> /tmp/archivelog
#echo "Accepting incoming archive to $TEXT_ARCHIVE_FILE" >> /tmp/archivelog
#echo "Accepting incoming archive to $WEB_ARCHIVE_FILE"  >> /tmp/archivelog


TMPNAM=/tmp/archive.$$

/bin/sed '/^$/,$s/^From />From /' >> $TMPNAM
echo -e "\n" >> $TMPNAM

IGNORE=0

grep -q "X-Spam-Status: Yes" $TMPNAM && IGNORE=1
grep -q "This is a reminder, sent out once a month" $TMPNAM && IGNORE=1

if [ $IGNORE -eq 0 ] ; then


    ## this is for backwards compatibility

    if [ ! -z "$ARCHIVE_FILE" ] ; then
	cat $TMPNAM >> $ARCHIVE_FILE
    fi


    ## submit the message to the archives if invooked the new way

    if [ ! -z "$TEXT_ARCHIVE_FILE" ] ; then
	cat $TMPNAM >> $TEXT_ARCHIVE_FILE
    fi

    if [ ! -z "$WEB_ARCHIVE_FILE" ] ; then
	cat $TMPNAM >> $WEB_ARCHIVE_FILE
    fi

fi

rm $TMPNAM
exit 0
